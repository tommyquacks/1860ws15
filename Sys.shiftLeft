function Sys.shiftLeft 2
    // Initialize local variables
    @0
    D=A
    @LCL
    A=M
    M=D     // LCL[0] = 0 (loop counter i)
    @LCL
    A=M+1
    M=D     // LCL[1] = 0 (result)

    // Pop arguments: x (to shift), y (shift amount)
    @SP
    AM=M-1  // SP--, point to y
    D=M     // D = y
    @SP
    AM=M-1  // SP--, point to x
    D=M     // D = x
    @LCL
    A=M+1
    M=D     // LCL[1] = x (store x in result)

    // If y == 0, return x (no shift)
    @SP
    A=M+1   // Point to y
    D=M     // D = y
    @END_LOOP
    D;JEQ   // If y == 0, jump to end

    // Loop: double x, y times
(LOOP)
    // Check if i < y
    @LCL
    A=M     // Point to i
    D=M     // D = i
    @SP
    A=M+1   // Point to y
    D=D-M   // D = i - y
    @END_LOOP
    D;JGE   // If i >= y, end loop

    // Double the result: result = result + result
    @LCL
    A=M+1   // Point to result
    D=M     // D = result
    D=D+M   // D = result + result
    M=D     // result = 2 * result

    // Increment i
    @LCL
    A=M     // Point to i
    D=M
    D=D+1
    M=D     // i++

    @LOOP
    0;JMP   // Repeat loop

(END_LOOP)
    // Push result onto stack
    @LCL
    A=M+1   // Point to result
    D=M     // D = result
    @SP
    A=M
    M=D     // Push result
    @SP
    M=M+1   // SP++

    return
